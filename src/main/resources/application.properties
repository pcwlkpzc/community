## ServerProperties
server.port=8080
server.servlet.context-path=/community

## ThymeleafProperties
spring.thymeleaf.cache=false

## DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

## MybatisProperties
mybatis.mapper-locations=classpath:mapper/*.xml
#Java实体类的目录
mybatis.type-aliases-package=com.nowcoder.community.entity
#id自增长
mybatis.configuration.useGeneratedKeys=true
#稀疏命名法和驼峰命名法匹配
mybatis.configuration.mapUnderscoreToCamelCase=true 

## logging
#logging.level.com.nowcoder.community=debug
#logging.file=D:/software/Idea2019/IdeaProjects/nowcoder/logger.log

## MailProperties
spring.mail.host=smtp.sina.com
spring.mail.port=465
spring.mail.username=pcwlkpzc@sina.com
spring.mail.password=ed47734670888cfc
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.ssl.enable=true

## community 自定义的内容
# 项目域名
community.path.domain=http://localhost:8080
# 服务器上传资源存放的路径
community.path.upload=D:/software/Idea2019/IdeaProjects/nowcoder/data/upload

## RedisProperties
# Redis中有16个数据库，我们选择其中的某一个数据库，此处选择11数据库
spring.redis.database=11
# 指定redis的主机名
spring.redis.host=localhost
# 指定redis的端口号
spring.redis.port=6379

## KafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=community-consumer-group
#消费者自动提交偏移量
spring.kafka.consumer.enable-auto-commit=true
# 消费者自动提交的间隔时间为3000毫秒
spring.kafka.consumer.auto-commit-interval=3000

## ElasticsearchProperties
# 配置集群的名称
spring.data.elasticsearch.cluster-name=nowcoder
# 配置节点的端口，elasticsearch默认情况下开启9200（用于http协议）和9300（用于tcp协议）两个端口
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300

## TaskExecutionProperties Spring的普通线程池
# 默认情况下线程池中的核心线程数量
spring.task.execution.pool.core-size=5
# 线程池扩容时，最大的核心线程数量
spring.task.execution.pool.max-size=15
# 线程池扩容到最大时，依旧不够使用，将任务放在队列中缓冲，队列的大小
spring.task.execution.pool.queue-capacity=100

## TaskSchedulingProperties
# 执行定时任务的线程池的大小
spring.task.scheduling.pool.size=5

## QuartzProperties
spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
#调度器id自动生成
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5